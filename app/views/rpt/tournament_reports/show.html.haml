%h2= @page_title

- amnh = Attendee.model_name.human
- xml_path = rpt_tournament_reports_path + '.xml'

%ul
  %li
    = link_to 'Export', '#export'
  %li
    = link_to 'Registered Attendee Emails', '#attendee-emails'

%p
  There are
  = usgc_pluralize(@players.count, amnh.downcase)
  registered to play in #{@tournament.name}.

%table.player-list.semantic
  %thead
    %tr
      %th Player Name
      - if @tournament.server
        %th #{@tournament.server_name} Username
      %th Rank
      %th AGA Rating
      %th Last Rated
      %th Flag
  %tbody
  - @players.each do |player|
    - aga_info = @aga_member_info[player.aga_id]
    %tr
      %td
        = NameInflector.capitalize(player.given_name)
        = NameInflector.capitalize(player.family_name)
        - if player.aga_id
          (#{link_to "#{player.aga_id}", "http://agagd.usgo.org/player/#{player.aga_id}"})
        - if @tournament.server
          %td= player['username_' + @tournament.server]
        %td= player.rank_name
        %td= aga_info ? aga_info[:rating] : '-'
        %td= aga_info ? aga_info[:last_rated_on] : '-'
        %td
          - if aga_info
            - if self_promoter(player, aga_info[:rating])
              Self-promoted

%h3#export Export to XML
%p Import into OpenGotha by selecting <strong>Tournament &rarr; Import &hellip; &rarr; Import Tournament From XML File</strong>.
= form_tag(xml_path, :method => :get) do
  %p= submit_tag "Export (Full Names)", data: { disable_with: false }
= form_tag(xml_path, :method => :get) do
  = hidden_field_tag :go_server_username, "username_" + @tournament.server
  %p= submit_tag "Export (Go Server Usernames)", data: { disable_with: false }

%h3#attendee-emails Registered Attendee Emails
.email-list
  %textarea.attendee_emails{:'data-emails' => @players.map { |p| p.formatted_email }.join(', ')}
    = @players.map { |p| p.formatted_email }.join(', ')
